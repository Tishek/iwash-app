"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _reactNative = require("react-native");
var _reactNativeMaps = require("react-native-maps");
var _helpers = require("./helpers");
var _jsxRuntime = require("react/jsx-runtime");
const ClusteredMarker = ({
  geometry,
  properties,
  onPress,
  clusterColor,
  clusterTextColor,
  clusterFontFamily,
  tracksViewChanges = false
}) => {
  const points = properties.point_count;
  const {
    width,
    height,
    fontSize,
    size
  } = (0, _helpers.returnMarkerStyle)(points);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNativeMaps.Marker, {
    coordinate: {
      longitude: geometry.coordinates[0],
      latitude: geometry.coordinates[1]
    },
    style: {
      zIndex: points + 1
    },
    onPress: onPress,
    tracksViewChanges: tracksViewChanges,
    children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: [styles.container, {
        width,
        height
      }],
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.View, {
        style: [styles.wrapper, {
          backgroundColor: clusterColor,
          width,
          height,
          borderRadius: width / 2
        }]
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.View, {
        style: [styles.cluster, {
          backgroundColor: clusterColor,
          width: size,
          height: size,
          borderRadius: size / 2
        }],
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: [styles.text, {
            color: clusterTextColor,
            fontSize,
            fontFamily: clusterFontFamily
          }],
          children: points
        })
      })]
    })
  });
};
const styles = _reactNative.StyleSheet.create({
  container: {
    justifyContent: 'center',
    alignItems: 'center'
  },
  wrapper: {
    position: 'absolute',
    opacity: 0.5,
    zIndex: 0
  },
  cluster: {
    justifyContent: 'center',
    alignItems: 'center',
    zIndex: 1
  },
  text: {
    fontWeight: 'bold'
  }
});
var _default = exports.default = /*#__PURE__*/(0, _react.memo)(ClusteredMarker);
//# sourceMappingURL=ClusteredMarker.js.map