"use strict";

import { memo } from 'react';
import { Text, View, StyleSheet } from 'react-native';
import { Marker } from 'react-native-maps';
import { returnMarkerStyle } from './helpers';
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
const ClusteredMarker = ({
  geometry,
  properties,
  onPress,
  clusterColor,
  clusterTextColor,
  clusterFontFamily,
  tracksViewChanges = false
}) => {
  const points = properties.point_count;
  const {
    width,
    height,
    fontSize,
    size
  } = returnMarkerStyle(points);
  return /*#__PURE__*/_jsx(Marker, {
    coordinate: {
      longitude: geometry.coordinates[0],
      latitude: geometry.coordinates[1]
    },
    style: {
      zIndex: points + 1
    },
    onPress: onPress,
    tracksViewChanges: tracksViewChanges,
    children: /*#__PURE__*/_jsxs(View, {
      style: [styles.container, {
        width,
        height
      }],
      children: [/*#__PURE__*/_jsx(View, {
        style: [styles.wrapper, {
          backgroundColor: clusterColor,
          width,
          height,
          borderRadius: width / 2
        }]
      }), /*#__PURE__*/_jsx(View, {
        style: [styles.cluster, {
          backgroundColor: clusterColor,
          width: size,
          height: size,
          borderRadius: size / 2
        }],
        children: /*#__PURE__*/_jsx(Text, {
          style: [styles.text, {
            color: clusterTextColor,
            fontSize,
            fontFamily: clusterFontFamily
          }],
          children: points
        })
      })]
    })
  });
};
const styles = StyleSheet.create({
  container: {
    justifyContent: 'center',
    alignItems: 'center'
  },
  wrapper: {
    position: 'absolute',
    opacity: 0.5,
    zIndex: 0
  },
  cluster: {
    justifyContent: 'center',
    alignItems: 'center',
    zIndex: 1
  },
  text: {
    fontWeight: 'bold'
  }
});
export default /*#__PURE__*/memo(ClusteredMarker);
//# sourceMappingURL=ClusteredMarker.js.map